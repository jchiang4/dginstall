---> Docgility starting to configure network and application gateway
 
---> Configuring Network - Creating Subnet
{
  "newVNet": {
    "addressSpace": {
      "addressPrefixes": [
        "10.0.0.0/16"
      ]
    },
    "enableDdosProtection": false,
    "etag": "W/\"860aa4f9-4d1e-4706-903e-d5c8f72bb532\"",
    "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/virtualNetworks/vnet",
    "location": "westus2",
    "name": "vnet",
    "provisioningState": "Succeeded",
    "resourceGroup": "test_group",
    "resourceGuid": "000df045-ed85-487d-8a19-c84132100a5a",
    "subnets": [
      {
        "addressPrefix": "10.0.0.0/24",
        "delegations": [],
        "etag": "W/\"860aa4f9-4d1e-4706-903e-d5c8f72bb532\"",
        "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/virtualNetworks/vnet/subnets/subnet",
        "name": "subnet",
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled",
        "provisioningState": "Succeeded",
        "resourceGroup": "test_group",
        "type": "Microsoft.Network/virtualNetworks/subnets"
      }
    ],
    "type": "Microsoft.Network/virtualNetworks",
    "virtualNetworkPeerings": []
  }
}
 
---> Configuring Network - Creating Application Gateway
{
  "applicationGateway": {
    "backendAddressPools": [
      {
        "etag": "W/\"96c2738e-f4e6-48d5-b621-532abf1455be\"",
        "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/backendAddressPools/appGatewayBackendPool",
        "name": "appGatewayBackendPool",
        "properties": {
          "backendAddresses": [],
          "provisioningState": "Succeeded",
          "requestRoutingRules": [
            {
              "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/requestRoutingRules/rule1",
              "resourceGroup": "test_group"
            }
          ]
        },
        "resourceGroup": "test_group",
        "type": "Microsoft.Network/applicationGateways/backendAddressPools"
      }
    ],
    "backendHttpSettingsCollection": [
      {
        "etag": "W/\"96c2738e-f4e6-48d5-b621-532abf1455be\"",
        "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/backendHttpSettingsCollection/appGatewayBackendHttpSettings",
        "name": "appGatewayBackendHttpSettings",
        "properties": {
          "connectionDraining": {
            "drainTimeoutInSec": 1,
            "enabled": false
          },
          "cookieBasedAffinity": "Disabled",
          "pickHostNameFromBackendAddress": false,
          "port": 80,
          "protocol": "Http",
          "provisioningState": "Succeeded",
          "requestRoutingRules": [
            {
              "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/requestRoutingRules/rule1",
              "resourceGroup": "test_group"
            }
          ],
          "requestTimeout": 30
        },
        "resourceGroup": "test_group",
        "type": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection"
      }
    ],
    "backendSettingsCollection": [],
    "frontendIPConfigurations": [
      {
        "etag": "W/\"96c2738e-f4e6-48d5-b621-532abf1455be\"",
        "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/frontendIPConfigurations/appGatewayFrontendIP",
        "name": "appGatewayFrontendIP",
        "properties": {
          "httpListeners": [
            {
              "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/httpListeners/appGatewayHttpListener",
              "resourceGroup": "test_group"
            }
          ],
          "privateIPAllocationMethod": "Dynamic",
          "provisioningState": "Succeeded",
          "publicIPAddress": {
            "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/publicIPAddresses/ip",
            "resourceGroup": "test_group"
          }
        },
        "resourceGroup": "test_group",
        "type": "Microsoft.Network/applicationGateways/frontendIPConfigurations"
      }
    ],
    "frontendPorts": [
      {
        "etag": "W/\"96c2738e-f4e6-48d5-b621-532abf1455be\"",
        "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/frontendPorts/appGatewayFrontendPort",
        "name": "appGatewayFrontendPort",
        "properties": {
          "httpListeners": [
            {
              "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/httpListeners/appGatewayHttpListener",
              "resourceGroup": "test_group"
            }
          ],
          "port": 80,
          "provisioningState": "Succeeded"
        },
        "resourceGroup": "test_group",
        "type": "Microsoft.Network/applicationGateways/frontendPorts"
      }
    ],
    "gatewayIPConfigurations": [
      {
        "etag": "W/\"96c2738e-f4e6-48d5-b621-532abf1455be\"",
        "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/gatewayIPConfigurations/appGatewayFrontendIP",
        "name": "appGatewayFrontendIP",
        "properties": {
          "provisioningState": "Succeeded",
          "subnet": {
            "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/virtualNetworks/vnet/subnets/subnet",
            "resourceGroup": "test_group"
          }
        },
        "resourceGroup": "test_group",
        "type": "Microsoft.Network/applicationGateways/gatewayIPConfigurations"
      }
    ],
    "httpListeners": [
      {
        "etag": "W/\"96c2738e-f4e6-48d5-b621-532abf1455be\"",
        "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/httpListeners/appGatewayHttpListener",
        "name": "appGatewayHttpListener",
        "properties": {
          "frontendIPConfiguration": {
            "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/frontendIPConfigurations/appGatewayFrontendIP",
            "resourceGroup": "test_group"
          },
          "frontendPort": {
            "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/frontendPorts/appGatewayFrontendPort",
            "resourceGroup": "test_group"
          },
          "hostNames": [],
          "protocol": "Http",
          "provisioningState": "Succeeded",
          "requestRoutingRules": [
            {
              "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/requestRoutingRules/rule1",
              "resourceGroup": "test_group"
            }
          ],
          "requireServerNameIndication": false
        },
        "resourceGroup": "test_group",
        "type": "Microsoft.Network/applicationGateways/httpListeners"
      }
    ],
    "listeners": [],
    "loadDistributionPolicies": [],
    "operationalState": "Running",
    "privateEndpointConnections": [],
    "privateLinkConfigurations": [],
    "probes": [],
    "provisioningState": "Succeeded",
    "redirectConfigurations": [],
    "requestRoutingRules": [
      {
        "etag": "W/\"96c2738e-f4e6-48d5-b621-532abf1455be\"",
        "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/requestRoutingRules/rule1",
        "name": "rule1",
        "properties": {
          "backendAddressPool": {
            "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/backendAddressPools/appGatewayBackendPool",
            "resourceGroup": "test_group"
          },
          "backendHttpSettings": {
            "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/backendHttpSettingsCollection/appGatewayBackendHttpSettings",
            "resourceGroup": "test_group"
          },
          "httpListener": {
            "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/httpListeners/appGatewayHttpListener",
            "resourceGroup": "test_group"
          },
          "priority": 10,
          "provisioningState": "Succeeded",
          "ruleType": "Basic"
        },
        "resourceGroup": "test_group",
        "type": "Microsoft.Network/applicationGateways/requestRoutingRules"
      }
    ],
    "resourceGuid": "19b6af87-944b-4271-85c0-7bc795ebdecf",
    "rewriteRuleSets": [],
    "routingRules": [],
    "sku": {
      "capacity": 2,
      "family": "Generation_1",
      "name": "Standard_v2",
      "tier": "Standard_v2"
    },
    "sslCertificates": [],
    "sslProfiles": [],
    "trustedClientCertificates": [],
    "trustedRootCertificates": [],
    "urlPathMaps": []
  }
}
 
---> Configuring Network - Creating Application Gateway Settings
{
  "connectionDraining": {
    "drainTimeoutInSec": 1,
    "enabled": false
  },
  "cookieBasedAffinity": "Disabled",
  "etag": "W/\"58087fcf-f3ca-47b8-b679-0beec44af88e\"",
  "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/backendHttpSettingsCollection/settings",
  "name": "settings",
  "pickHostNameFromBackendAddress": false,
  "port": 80,
  "protocol": "Http",
  "provisioningState": "Succeeded",
  "requestTimeout": 120,
  "resourceGroup": "test_group",
  "type": "Microsoft.Network/applicationGateways/backendHttpSettingsCollection"
}
 
---> Configuring Network - Enabing Application Gateway add-on
{
  "aadProfile": null,
  "addonProfiles": {
    "azureKeyvaultSecretsProvider": {
      "config": null,
      "enabled": false,
      "identity": null
    },
    "azurepolicy": {
      "config": null,
      "enabled": false,
      "identity": null
    },
    "ingressApplicationGateway": {
      "config": {
        "applicationGatewayId": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw",
        "effectiveApplicationGatewayId": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw"
      },
      "enabled": true,
      "identity": {
        "clientId": "1afb21d4-77d0-4d8a-abfe-3c57e3c32840",
        "objectId": "5a9b8e32-464b-4fd7-a459-71f0227e77db",
        "resourceId": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourcegroups/MC_test_group_test_westus2/providers/Microsoft.ManagedIdentity/userAssignedIdentities/ingressapplicationgateway-test"
      }
    }
  },
  "agentPoolProfiles": [
    {
      "artifactStreamingProfile": null,
      "availabilityZones": null,
      "capacityReservationGroupId": null,
      "count": 2,
      "creationData": null,
      "currentOrchestratorVersion": "1.30.9",
      "eTag": "8873545f-93c9-4410-b890-a33e2e3dc247",
      "enableAutoScaling": true,
      "enableCustomCaTrust": null,
      "enableEncryptionAtHost": null,
      "enableFips": false,
      "enableNodePublicIp": false,
      "enableUltraSsd": null,
      "gatewayProfile": null,
      "gpuInstanceProfile": null,
      "gpuProfile": null,
      "hostGroupId": null,
      "kubeletConfig": null,
      "kubeletDiskType": "OS",
      "linuxOsConfig": null,
      "maxCount": 5,
      "maxPods": 110,
      "messageOfTheDay": null,
      "minCount": 2,
      "mode": "System",
      "name": "agentpool",
      "networkProfile": null,
      "nodeImageVersion": "AKSUbuntu-2204gen2containerd-202502.09.0",
      "nodeInitializationTaints": null,
      "nodeLabels": null,
      "nodePublicIpPrefixId": null,
      "nodeTaints": null,
      "orchestratorVersion": "1.30.9",
      "osDiskSizeGb": 128,
      "osDiskType": "Ephemeral",
      "osSku": "Ubuntu",
      "osType": "Linux",
      "podIpAllocationMode": null,
      "podSubnetId": null,
      "powerState": {
        "code": "Running"
      },
      "provisioningState": "Succeeded",
      "proximityPlacementGroupId": null,
      "scaleDownMode": "Delete",
      "scaleSetEvictionPolicy": null,
      "scaleSetPriority": null,
      "securityProfile": {
        "enableSecureBoot": false,
        "enableVtpm": false,
        "sshAccess": "LocalUser"
      },
      "spotMaxPrice": null,
      "tags": null,
      "type": "VirtualMachineScaleSets",
      "upgradeSettings": {
        "drainTimeoutInMinutes": null,
        "maxSurge": "10%",
        "nodeSoakDurationInMinutes": null,
        "undrainableNodeBehavior": null
      },
      "virtualMachineNodesStatus": null,
      "virtualMachinesProfile": null,
      "vmSize": "Standard_D4ds_v5",
      "vnetSubnetId": null,
      "windowsProfile": null,
      "workloadRuntime": null
    }
  ],
  "aiToolchainOperatorProfile": null,
  "apiServerAccessProfile": null,
  "autoScalerProfile": {
    "balanceSimilarNodeGroups": "false",
    "daemonsetEvictionForEmptyNodes": false,
    "daemonsetEvictionForOccupiedNodes": true,
    "expander": "random",
    "ignoreDaemonsetsUtilization": false,
    "maxEmptyBulkDelete": "10",
    "maxGracefulTerminationSec": "600",
    "maxNodeProvisionTime": "15m",
    "maxTotalUnreadyPercentage": "45",
    "newPodScaleUpDelay": "0s",
    "okTotalUnreadyCount": "3",
    "scaleDownDelayAfterAdd": "10m",
    "scaleDownDelayAfterDelete": "10s",
    "scaleDownDelayAfterFailure": "3m",
    "scaleDownUnneededTime": "10m",
    "scaleDownUnreadyTime": "20m",
    "scaleDownUtilizationThreshold": "0.5",
    "scanInterval": "10s",
    "skipNodesWithLocalStorage": "false",
    "skipNodesWithSystemPods": "true"
  },
  "autoUpgradeProfile": {
    "nodeOsUpgradeChannel": "NodeImage",
    "upgradeChannel": "patch"
  },
  "azureMonitorProfile": {
    "appMonitoring": null,
    "containerInsights": null,
    "metrics": {
      "enabled": true,
      "kubeStateMetrics": {
        "metricAnnotationsAllowList": "",
        "metricLabelsAllowlist": ""
      }
    }
  },
  "azurePortalFqdn": "test-dns-3b8s26cm.portal.hcp.westus2.azmk8s.io",
  "bootstrapProfile": {
    "artifactSource": "Direct",
    "containerRegistryId": null
  },
  "creationData": null,
  "currentKubernetesVersion": "1.30.9",
  "disableLocalAccounts": false,
  "diskEncryptionSetId": null,
  "dnsPrefix": "test-dns",
  "eTag": "b0391f70-58d4-4da3-aa8a-d40df2475ad3",
  "enableNamespaceResources": null,
  "enablePodSecurityPolicy": null,
  "enableRbac": true,
  "extendedLocation": null,
  "fqdn": "test-dns-3b8s26cm.hcp.westus2.azmk8s.io",
  "fqdnSubdomain": null,
  "httpProxyConfig": null,
  "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourcegroups/test_group/providers/Microsoft.ContainerService/managedClusters/test",
  "identity": {
    "delegatedResources": null,
    "principalId": "47e81abc-9f16-481d-8404-c4dc9d849cd9",
    "tenantId": "2432c95d-cefe-4f72-886b-8f3918934fef",
    "type": "SystemAssigned",
    "userAssignedIdentities": null
  },
  "identityProfile": {
    "kubeletidentity": {
      "clientId": "ab298ec7-195b-47dc-8549-c0672642f482",
      "objectId": "01b8d500-a201-459e-85dc-cf7d24f3764e",
      "resourceId": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourcegroups/MC_test_group_test_westus2/providers/Microsoft.ManagedIdentity/userAssignedIdentities/test-agentpool"
    }
  },
  "ingressProfile": null,
  "kind": "Base",
  "kubernetesVersion": "1.30.9",
  "linuxProfile": null,
  "location": "westus2",
  "maxAgentPools": 100,
  "metricsProfile": {
    "costAnalysis": {
      "enabled": false
    }
  },
  "name": "test",
  "networkProfile": {
    "advancedNetworking": null,
    "dnsServiceIp": "10.0.0.10",
    "ipFamilies": [
      "IPv4"
    ],
    "kubeProxyConfig": null,
    "loadBalancerProfile": {
      "allocatedOutboundPorts": null,
      "backendPoolType": "nodeIPConfiguration",
      "clusterServiceLoadBalancerHealthProbeMode": null,
      "effectiveOutboundIPs": [
        {
          "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/MC_test_group_test_westus2/providers/Microsoft.Network/publicIPAddresses/0f1d2d70-e351-4c84-b765-bb92496f31c3",
          "resourceGroup": "MC_test_group_test_westus2"
        }
      ],
      "enableMultipleStandardLoadBalancers": null,
      "idleTimeoutInMinutes": null,
      "managedOutboundIPs": {
        "count": 1,
        "countIpv6": null
      },
      "outboundIPs": null,
      "outboundIpPrefixes": null
    },
    "loadBalancerSku": "Standard",
    "natGatewayProfile": null,
    "networkDataplane": "azure",
    "networkMode": null,
    "networkPlugin": "azure",
    "networkPluginMode": null,
    "networkPolicy": "none",
    "outboundType": "loadBalancer",
    "podCidr": null,
    "podCidrs": null,
    "podLinkLocalAccess": "IMDS",
    "serviceCidr": "10.0.0.0/16",
    "serviceCidrs": [
      "10.0.0.0/16"
    ],
    "staticEgressGatewayProfile": null
  },
  "nodeProvisioningProfile": {
    "mode": "Manual"
  },
  "nodeResourceGroup": "MC_test_group_test_westus2",
  "nodeResourceGroupProfile": null,
  "oidcIssuerProfile": {
    "enabled": true,
    "issuerUrl": "https://westus2.oic.prod-aks.azure.com/2432c95d-cefe-4f72-886b-8f3918934fef/cd6f5bd7-9394-44cd-a7bc-76f8f0993f58/"
  },
  "podIdentityProfile": null,
  "powerState": {
    "code": "Running"
  },
  "privateFqdn": null,
  "privateLinkResources": null,
  "provisioningState": "Succeeded",
  "publicNetworkAccess": null,
  "resourceGroup": "test_group",
  "resourceUid": "67c5ecebac48090001b8021a",
  "safeguardsProfile": null,
  "securityProfile": {
    "azureKeyVaultKms": null,
    "customCaTrustCertificates": null,
    "defender": null,
    "imageCleaner": {
      "enabled": true,
      "intervalHours": 168
    },
    "imageIntegrity": null,
    "nodeRestriction": null,
    "workloadIdentity": {
      "enabled": true
    }
  },
  "serviceMeshProfile": null,
  "servicePrincipalProfile": {
    "clientId": "msi",
    "secret": null
  },
  "sku": {
    "name": "Base",
    "tier": "Free"
  },
  "storageProfile": {
    "blobCsiDriver": null,
    "diskCsiDriver": {
      "enabled": true,
      "version": "v1"
    },
    "fileCsiDriver": {
      "enabled": true
    },
    "snapshotController": {
      "enabled": true
    }
  },
  "supportPlan": "KubernetesOfficial",
  "systemData": null,
  "tags": null,
  "type": "Microsoft.ContainerService/ManagedClusters",
  "upgradeSettings": null,
  "windowsProfile": {
    "adminPassword": null,
    "adminUsername": "azureuser",
    "enableCsiProxy": true,
    "gmsaProfile": null,
    "licenseType": null
  },
  "workloadAutoScalerProfile": {
    "keda": null,
    "verticalPodAutoscaler": null
  }
}
 
---> Configuring Network - Creating Network Peering
{
  "allowForwardedTraffic": false,
  "allowGatewayTransit": false,
  "allowVirtualNetworkAccess": true,
  "doNotVerifyRemoteGateways": false,
  "etag": "W/\"f8ba091b-d097-489e-b915-4ce3525ffb0d\"",
  "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/virtualNetworks/vnet/virtualNetworkPeerings/vnetpeering",
  "name": "vnetpeering",
  "peerCompleteVnets": true,
  "peeringState": "Initiated",
  "peeringSyncLevel": "RemoteNotInSync",
  "provisioningState": "Succeeded",
  "remoteAddressSpace": {
    "addressPrefixes": [
      "10.224.0.0/12"
    ]
  },
  "remoteVirtualNetwork": {
    "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/MC_test_group_test_westus2/providers/Microsoft.Network/virtualNetworks/aks-vnet-20139558",
    "resourceGroup": "MC_test_group_test_westus2"
  },
  "remoteVirtualNetworkAddressSpace": {
    "addressPrefixes": [
      "10.224.0.0/12"
    ]
  },
  "resourceGroup": "test_group",
  "resourceGuid": "7b05bda1-1b33-0da3-17aa-39cd2054f8de",
  "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
  "useRemoteGateways": false
}
 
---> Configuring Network - Activating Network Peering
{
  "allowForwardedTraffic": false,
  "allowGatewayTransit": false,
  "allowVirtualNetworkAccess": true,
  "doNotVerifyRemoteGateways": false,
  "etag": "W/\"4d2744a8-7fcf-442d-b38d-77b2c905aa12\"",
  "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/MC_test_group_test_westus2/providers/Microsoft.Network/virtualNetworks/aks-vnet-20139558/virtualNetworkPeerings/vnet2",
  "name": "vnet2",
  "peerCompleteVnets": true,
  "peeringState": "Connected",
  "peeringSyncLevel": "FullyInSync",
  "provisioningState": "Succeeded",
  "remoteAddressSpace": {
    "addressPrefixes": [
      "10.0.0.0/16"
    ]
  },
  "remoteVirtualNetwork": {
    "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/virtualNetworks/vnet",
    "resourceGroup": "test_group"
  },
  "remoteVirtualNetworkAddressSpace": {
    "addressPrefixes": [
      "10.0.0.0/16"
    ]
  },
  "resourceGroup": "MC_test_group_test_westus2",
  "resourceGuid": "7b05bda1-1b33-0da3-17aa-39cd2054f8de",
  "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
  "useRemoteGateways": false
}
 
---> Configuring Network - Creating Server Processing Ports
{
  "etag": "W/\"84f1683d-e4d4-432b-908b-abe65d5f3712\"",
  "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/frontendPorts/beport",
  "name": "beport",
  "port": 8000,
  "provisioningState": "Succeeded",
  "resourceGroup": "test_group",
  "type": "Microsoft.Network/applicationGateways/frontendPorts"
}
{
  "etag": "W/\"821b47cd-8ac0-4f70-9cb4-e4b36d1c4d2d\"",
  "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/frontendPorts/beaiport",
  "name": "beaiport",
  "port": 8001,
  "provisioningState": "Succeeded",
  "resourceGroup": "test_group",
  "type": "Microsoft.Network/applicationGateways/frontendPorts"
}
 
---> Configuring Network - Modify auto-created Port to listen to another port.
 
---> Configuring Network - Creating Server Processing Ports
 
---> Configuring Network - Creating HTTP Settings
 
---> Configuring Network - Creating Application Listeners for Server Processing
 
---> Configuring Network - Creating Address Pools for Backend IP
{
  "backendAddresses": [
    {
      "ipAddress": "10.224.0.44"
    }
  ],
  "etag": "W/\"c54bdd91-eb15-4840-a36a-99f588bc471c\"",
  "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/backendAddressPools/beaddresspool",
  "name": "beaddresspool",
  "provisioningState": "Succeeded",
  "resourceGroup": "test_group",
  "type": "Microsoft.Network/applicationGateways/backendAddressPools"
}
{
  "backendAddresses": [
    {
      "ipAddress": "10.224.1.30"
    }
  ],
  "etag": "W/\"688cb4b8-ce82-472d-b289-79e650627326\"",
  "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/backendAddressPools/beaiaddresspool",
  "name": "beaiaddresspool",
  "provisioningState": "Succeeded",
  "resourceGroup": "test_group",
  "type": "Microsoft.Network/applicationGateways/backendAddressPools"
}
{
  "backendAddresses": [
    {
      "ipAddress": "10.224.0.32"
    }
  ],
  "etag": "W/\"da590769-2ff2-4f7f-b364-dedef3dda0aa\"",
  "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/backendAddressPools/uxaddresspool",
  "name": "uxaddresspool",
  "provisioningState": "Succeeded",
  "resourceGroup": "test_group",
  "type": "Microsoft.Network/applicationGateways/backendAddressPools"
}
 
---> Configuring Network - Creating Application Rules for Server Processing
 
---> Configuring Network - Creating Backend Probes for Server Health
{
  "etag": "W/\"8da0fee8-2288-45b1-94dc-63e026e7da57\"",
  "host": "127.0.0.1",
  "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/probes/beprobe",
  "interval": 30,
  "match": {
    "statusCodes": [
      "200-399"
    ]
  },
  "minServers": 0,
  "name": "beprobe",
  "path": "/",
  "pickHostNameFromBackendHttpSettings": false,
  "port": 8000,
  "protocol": "Http",
  "provisioningState": "Succeeded",
  "resourceGroup": "test_group",
  "timeout": 120,
  "type": "Microsoft.Network/applicationGateways/probes",
  "unhealthyThreshold": 8
}
{
  "etag": "W/\"0fe84dc7-3392-4f72-8378-045822692919\"",
  "host": "127.0.0.1",
  "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/probes/beaiprobe",
  "interval": 30,
  "match": {
    "statusCodes": [
      "200-399"
    ]
  },
  "minServers": 0,
  "name": "beaiprobe",
  "path": "/",
  "pickHostNameFromBackendHttpSettings": false,
  "port": 8001,
  "protocol": "Http",
  "provisioningState": "Succeeded",
  "resourceGroup": "test_group",
  "timeout": 120,
  "type": "Microsoft.Network/applicationGateways/probes",
  "unhealthyThreshold": 8
}
{
  "etag": "W/\"eb18ca50-c1da-4696-971f-7f8d1b63b7da\"",
  "host": "127.0.0.1",
  "id": "/subscriptions/f72d0199-c118-4592-b40d-a37ecb8e6bf5/resourceGroups/test_group/providers/Microsoft.Network/applicationGateways/gw/probes/uxprobe",
  "interval": 30,
  "match": {
    "statusCodes": [
      "200-399"
    ]
  },
  "minServers": 0,
  "name": "uxprobe",
  "path": "/",
  "pickHostNameFromBackendHttpSettings": false,
  "protocol": "Http",
  "provisioningState": "Succeeded",
  "resourceGroup": "test_group",
  "timeout": 120,
  "type": "Microsoft.Network/applicationGateways/probes",
  "unhealthyThreshold": 8
}
 
Completed Network Configuration to Allow Access to Application
